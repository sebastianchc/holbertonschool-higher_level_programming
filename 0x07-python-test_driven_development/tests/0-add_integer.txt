================================
Doctest for add_integer funtion
================================

''add_integer(a, b=98)'' add two integers numbers.
a and b must be integer or floats, otherwise raise
a TypeError. if only one argument is passed b take
the value of 98 by default.

Import the function
=================================================================

	>>> add_integer = __import__('0-add_integer').add_integer

Integer Cases
=================================================================
	>>> add_integer(4, 13)
	17
	>>> add_integer(-1, -5)
	-6

One Argument
=================================================================
	>>> add_integer(-5)
	93
	>>> add_integer(67)
	69

Float Cases
=================================================================
	>>> add_integer(74.4, -10.2)
	64
	>>> add_integer(-5.3, 7.1)
	2

None argument
=================================================================
	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

String
=================================================================
	>>> add_integer("Holberton")
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

List
=================================================================
	>>> add_integer(5, [23, "Betty"])
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Dict
=================================================================
	>>> add_integer({C:is fun}, -100)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Boolean
=================================================================
	>>> add_integer(34, False)
	Traceback (most recent call last):
	...
	TypeError: b must be an integer
